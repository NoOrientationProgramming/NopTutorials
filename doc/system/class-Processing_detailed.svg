<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1445px" preserveAspectRatio="none" style="width:670px;height:1445px;background:#FFFFFF;" version="1.1" viewBox="0 0 670 1445" width="670px" zoomAndPan="magnify"><defs/><g><!--MD5=[c1cb23d6e432624f6cb8edc9afe0423f]
class Processing--><g id="elem_Processing"><rect codeLine="10" fill="#FFFFFF" height="1115.2969" id="Processing" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="636" x="9" y="30.6645"/><ellipse cx="285.75" cy="46.6645" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M285.8594,42.0082 L284.7031,47.0864 L287.0313,47.0864 L285.8594,42.0082 Z M284.375,39.7739 L287.3594,39.7739 L290.7188,52.1645 L288.2656,52.1645 L287.5,49.102 L284.2188,49.102 L283.4688,52.1645 L281.0313,52.1645 L284.375,39.7739 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="74" x="306.25" y="51.5112">Processing</text><line style="stroke:#000000;stroke-width:0.5;" x1="10" x2="644" y1="62.6645" y2="62.6645"/><ellipse cx="20" cy="76.3129" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="29" y="79.6596">void tickTree()</text><ellipse cx="20" cy="92.6098" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="29" y="95.9565">bool progress() const</text><ellipse cx="20" cy="108.9067" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="29" y="112.2534">Success success() const</text><ellipse cx="20" cy="125.2036" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="29" y="128.5502">void unusedSet()</text><ellipse cx="20" cy="141.5004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="29" y="144.8471">void procTreeDisplaySet(bool display)</text><ellipse cx="20" cy="157.7973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="29" y="161.144">bool initDone() const</text><ellipse cx="20" cy="174.0942" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="29" y="177.4409">bool processDone() const</text><ellipse cx="20" cy="190.3911" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="29" y="193.7377">bool shutdownDone() const</text><ellipse cx="20" cy="206.6879" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="610" x="29" y="210.0346">int processTreeStr(char *pBuf, char *pBufEnd, bool detailed = true, bool colored = false)</text><ellipse cx="20" cy="222.9848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="256" x="29" y="226.3315">void undrivenSet(Processing *pChild)</text><ellipse cx="20" cy="239.2817" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="225" x="29" y="242.6284">void destroy(Processing *pChild)</text><ellipse cx="20" cy="255.5786" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="155" x="29" y="258.9252">void applicationClose()</text><ellipse cx="20" cy="271.8754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="275.2221">void globalDestructorRegister(GlobDestructorFunc globDestr)</text><ellipse cx="20" cy="288.1723" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="279" x="29" y="291.519">const char *strrchr(const char *x, char y)</text><ellipse cx="20" cy="304.4692" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="356" x="29" y="307.8159">void *memcpy(void *to, const void *from, size_t cnt)</text><ellipse cx="20" cy="320.7661" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="252" x="29" y="324.1127">void showAddressInIdSet(uint8_t val)</text><ellipse cx="20" cy="337.0629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="264" x="29" y="340.4096">void disableTreeDefaultSet(uint8_t val)</text><ellipse cx="20" cy="353.3598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="305" x="29" y="356.7065">void sleepUsInternalDriveSet(size_t delayUs)</text><ellipse cx="20" cy="369.6567" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="386" x="29" y="373.0034">void sleepInternalDriveSet(chrono::microseconds delay)</text><ellipse cx="20" cy="385.9536" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="373" x="29" y="389.3002">void sleepInternalDriveSet(chrono::milliseconds delay)</text><ellipse cx="20" cy="402.2504" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="331" x="29" y="405.5971">void numBurstInternalDriveSet(size_t numBurst)</text><ellipse cx="20" cy="418.5473" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="340" x="29" y="421.894">void funcInternalDriveSet(InternalDriverFunc pFct)</text><line style="stroke:#000000;stroke-width:1.0;" x1="10" x2="644" y1="429.1957" y2="429.1957"/><polygon fill="#FFFF44" points="20,437.8442,24,441.8442,20,445.8442,16,441.8442" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="29" y="446.1909">Processing(const char *name)</text><polygon fill="#FFFF44" points="20,454.1411,24,458.1411,20,462.1411,16,458.1411" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="96" x="29" y="462.4877">~Processing()</text><polygon fill="#FFFF44" points="20,470.4379,24,474.4379,20,478.4379,16,474.4379" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="29" y="478.7846">const char *procName() const</text><polygon fill="#FFFF44" points="20,486.7348,24,490.7348,20,494.7348,16,490.7348" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="515" x="29" y="495.0815">Processing *start(Processing *pChild, DriverMode driver = DrivenByParent)</text><polygon fill="#FFFF44" points="20,503.0317,24,507.0317,20,511.0317,16,507.0317" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="274" x="29" y="511.3784">Processing *cancel(Processing *pChild)</text><polygon fill="#FFFF44" points="20,519.3286,24,523.3286,20,527.3286,16,523.3286" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="29" y="527.6752">Processing *repel(Processing *pChild)</text><polygon fill="#FFFF44" points="20,535.6254,24,539.6254,20,543.6254,16,539.6254" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="365" x="29" y="543.9721">Processing *whenFinishedRepel(Processing *pChild)</text><polygon fill="#FFFF44" points="20,551.9223,24,555.9223,20,559.9223,16,555.9223" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="124" x="29" y="560.269">Success initialize()</text><polygon fill="#FFFF44" points="20,568.2192,24,572.2192,20,576.2192,16,572.2192" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="154" x="29" y="576.5659">Success process() = 0</text><polygon fill="#FFFF44" points="20,584.5161,24,588.5161,20,592.5161,16,588.5161" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="139" x="29" y="592.8627">Success shutdown()</text><polygon fill="#FFFF44" points="20,600.8129,24,604.8129,20,608.8129,16,604.8129" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="304" x="29" y="609.1596">void processInfo(char *pBuf, char *pBufEnd)</text><polygon fill="#FFFF44" points="20,617.1098,24,621.1098,20,625.1098,16,621.1098" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="326" x="29" y="625.4565">size_t processTrace(char *pBuf, char *pBufEnd)</text><polygon fill="#FFFF44" points="20,633.4067,24,637.4067,20,641.4067,16,637.4067" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="29" y="641.7534">Success childrenSuccess()</text><polygon fill="#FFFF44" points="20,649.7036,24,653.7036,20,657.7036,16,653.7036" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="495" x="29" y="658.0502">size_t mncpy(void *dest, size_t destSize, const void *src, size_t srcSize)</text><polygon fill="#FFFF44" points="20,666.0004,24,670.0004,20,674.0004,16,670.0004" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="29" y="674.3471">DriverMode driver() const</text><polygon fill="#FFFF44" points="20,682.2973,24,686.2973,20,690.2973,16,686.2973" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="29" y="690.644">uint8_t levelDriver() const</text><polygon fill="#FFFF44" points="20,698.5942,24,702.5942,20,706.5942,16,702.5942" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="434" x="29" y="706.9409">int procId(char *pBuf, char *pBufEnd, const Processing *pProc)</text><polygon fill="#FFFF44" points="20,714.8911,24,718.8911,20,722.8911,16,718.8911" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="503" x="29" y="723.2377">int progressStr(char *pBuf, char *pBufEnd, const int val, const int maxVal)</text><polygon fill="none" points="20,731.1879,24,735.1879,20,739.1879,16,735.1879" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="29" y="739.5346">uint8_t mState</text><polygon fill="none" points="20,747.4848,24,751.4848,20,755.4848,16,751.4848" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="29" y="755.8315">uint8_t mStateOld</text><line style="stroke:#000000;stroke-width:1.0;" x1="10" x2="644" y1="763.1332" y2="763.1332"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="773.7817"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="29" y="780.1284">Processing()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="790.0786"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="29" y="796.4252">Processing(const Processing &amp;)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="806.3754"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="29" y="812.7221">Processing &amp;operator=(const Processing &amp;)</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="822.6723"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="29" y="829.019">const char *mName</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="838.9692"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="29" y="845.3159">list&lt;Processing *&gt; mChildList</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="855.2661"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="29" y="861.6127">mutex mChildListMtx</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="871.5629"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="29" y="877.9096">thread *mpThread</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="887.8598"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="29" y="894.2065">Success mSuccess</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="904.1567"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="29" y="910.5034">uint16_t mNumChildren</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="920.4536"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="29" y="926.8002">uint8_t mStateAbstract</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="936.7504"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="29" y="943.0971">DriverMode mDriver</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="953.0473"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="29" y="959.394">uint8_t mStatParent</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="969.3442"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="29" y="975.6909">uint8_t mStatDrv</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="985.6411"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="29" y="991.9877">uint8_t mLevelTree</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="1001.9379"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="29" y="1008.2846">uint8_t mLevelDriver</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="1018.2348"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="264" x="29" y="1024.5815">void parentalDrive(Processing *pChild)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="1034.5317"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="259" x="29" y="1040.8784">void internalDrive(Processing *pChild)</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="1050.8286"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="29" y="1057.1752">size_t sleepInternalDriveUs</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="1067.1254"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="198" x="29" y="1073.4721">size_t numBurstInternalDrive</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="1083.4223"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="245" x="29" y="1089.769">InternalDriverFunc pFctInternalDrive</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="1099.7192"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="169" x="29" y="1106.0659">uint8_t showAddressInId</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="1116.0161"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="181" x="29" y="1122.3627">uint8_t disableTreeDefault</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="17" y="1132.3129"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="310" x="29" y="1138.6596">list&lt;GlobDestructorFunc&gt; globalDestructors</text></g><!--MD5=[84ff7ea6cbe1073b072d3dffcd39692e]
class Verb_ing--><g id="elem_Verb_ing"><rect codeLine="80" fill="#FFFFFF" height="202.6719" id="Verb_ing" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="600" x="27" y="1205.6645"/><ellipse cx="232.75" cy="1221.6645" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M235.7188,1227.3051 Q235.1406,1227.602 234.5,1227.7426 Q233.8594,1227.8989 233.1563,1227.8989 Q230.6563,1227.8989 229.3281,1226.2582 Q228.0156,1224.602 228.0156,1221.477 Q228.0156,1218.352 229.3281,1216.6957 Q230.6563,1215.0395 233.1563,1215.0395 Q233.8594,1215.0395 234.5,1215.1957 Q235.1563,1215.352 235.7188,1215.6489 L235.7188,1218.3676 Q235.0938,1217.7895 234.5,1217.5239 Q233.9063,1217.2426 233.2813,1217.2426 Q231.9375,1217.2426 231.25,1218.3207 Q230.5625,1219.3832 230.5625,1221.477 Q230.5625,1223.5707 231.25,1224.6489 Q231.9375,1225.7114 233.2813,1225.7114 Q233.9063,1225.7114 234.5,1225.4457 Q235.0938,1225.1645 235.7188,1224.5864 L235.7188,1227.3051 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="253.25" y="1226.5112">Verb_ing</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="118" x="512" y="1202.6645"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="108" x="517" y="1214.8032">Present Participle</text><line style="stroke:#000000;stroke-width:0.5;" x1="28" x2="626" y1="1237.6645" y2="1237.6645"/><ellipse cx="38" cy="1251.3129" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="125" x="47" y="1254.6596">Verb_ing *create()</text><line style="stroke:#000000;stroke-width:1.0;" x1="28" x2="626" y1="1261.9614" y2="1261.9614"/><polygon fill="#FFFF44" points="38,1270.6098,42,1274.6098,38,1278.6098,34,1274.6098" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="47" y="1278.9565">Verb_ing()</text><polygon fill="#FFFF44" points="38,1286.9067,42,1290.9067,38,1294.9067,34,1290.9067" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="83" x="47" y="1295.2534">~Verb_ing()</text><line style="stroke:#000000;stroke-width:1.0;" x1="28" x2="626" y1="1302.5551" y2="1302.5551"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="35" y="1313.2036"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="299" x="47" y="1319.5502">Verb_ing(const Verb_ing &amp;) : Processing("")</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="35" y="1329.5004"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="47" y="1335.8471">Verb_ing &amp;operator=(const Verb_ing &amp;)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="35" y="1345.7973"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="47" y="1352.144">Success initialize()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="35" y="1362.0942"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="47" y="1368.4409">Success process()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="35" y="1378.3911"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="47" y="1384.7377">Success shutdown()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="35" y="1394.6879"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="304" x="47" y="1401.0346">void processInfo(char *pBuf, char *pBufEnd)</text></g><!--MD5=[30c28498d11c6b6cae89e7b6ccf56923]
link Processing to Processing--><g id="link_Processing_Processing"><path codeLine="94" d="M327,30.5145 C327,19.0645 327,12.6645 327,12.6645 C327,12.6645 663,12.6645 663,12.6645 C663,12.6645 663,1175.6645 663,1175.6645 C663,1175.6645 636,1175.6645 636,1175.6645 C636,1175.6645 636,1158.7245 636,1158.7245 " fill="none" id="Processing-to-Processing" style="stroke:#000000;stroke-width:1.0;"/><polygon fill="none" points="636,1145.7245,632,1151.7245,636,1157.7245,640,1151.7245,636,1145.7245" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="23" x="303.8383" y="19.6328">0..*</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="632.2891" y="1165.7364">1</text></g><!--MD5=[dbbfeafeb4235911a728dda71c62a3eb]
reverse link Processing to Verb_ing--><g id="link_Processing_Verb_ing"><path codeLine="95" d="M327,1165.8045 C327,1165.8045 327,1205.4845 327,1205.4845 " fill="none" id="Processing-backto-Verb_ing" style="stroke:#000000;stroke-width:1.0;"/><polygon fill="none" points="320,1165.8045,327,1145.8045,334,1165.8045,320,1165.8045" style="stroke:#000000;stroke-width:1.0;"/></g><rect fill="none" height="23.2813" style="stroke:none;stroke-width:1.0;" width="198" x="229" y="1414.3364"/><text fill="#888888" font-family="sans-serif" font-size="10" font-weight="bold" lengthAdjust="spacing" textLength="71" x="229" y="1423.6186">Processing()</text><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="121" x="303" y="1423.6186">Class Diagram - Detailed</text><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="167" x="244.5" y="1435.2592">(C) DSP-Crowd Electronics GmbH</text><!--MD5=[801e529321262b9122006bc21364e351]
@startuml

skinparam linetype ortho
skinparam minClassWidth 600
skinparam class {
	BackgroundColor White
	ArrowColor Black
	BorderColor Black
}

abstract class Processing {
	+void tickTree()
	+bool progress() const
	+Success success() const
	+void unusedSet()
	+void procTreeDisplaySet(bool display)
	+bool initDone() const
	+bool processDone() const
	+bool shutdownDone() const
	+int processTreeStr(char *pBuf, char *pBufEnd, bool detailed = true, bool colored = false)
	+{static} void undrivenSet(Processing *pChild)
	+{static} void destroy(Processing *pChild)
	+{static} void applicationClose()
	+{static} void globalDestructorRegister(GlobDestructorFunc globDestr)
	+{static} const char *strrchr(const char *x, char y)
	+{static} void *memcpy(void *to, const void *from, size_t cnt)
	+{static} void showAddressInIdSet(uint8_t val)
	+{static} void disableTreeDefaultSet(uint8_t val)
	+{static} void sleepUsInternalDriveSet(size_t delayUs)
	+{static} void sleepInternalDriveSet(chrono::microseconds delay)
	+{static} void sleepInternalDriveSet(chrono::milliseconds delay)
	+{static} void numBurstInternalDriveSet(size_t numBurst)
	+{static} void funcInternalDriveSet(InternalDriverFunc pFct)
	- -
	#Processing(const char *name)
	#{abstract} ~Processing()
	#const char *procName() const
	#Processing *start(Processing *pChild, DriverMode driver = DrivenByParent)
	#Processing *cancel(Processing *pChild)
	#Processing *repel(Processing *pChild)
	#Processing *whenFinishedRepel(Processing *pChild)
	#{abstract} Success initialize()
	#{abstract} Success process() = 0
	#{abstract} Success shutdown()
	#{abstract} void processInfo(char *pBuf, char *pBufEnd)
	#{abstract} size_t processTrace(char *pBuf, char *pBufEnd)
	#Success childrenSuccess()
	#size_t mncpy(void *dest, size_t destSize, const void *src, size_t srcSize)
	#DriverMode driver() const
	#uint8_t levelDriver() const
	#{static} int procId(char *pBuf, char *pBufEnd, const Processing *pProc)
	#{static} int progressStr(char *pBuf, char *pBufEnd, const int val, const int maxVal)
	#uint8_t mState
	#uint8_t mStateOld
	- -
	-Processing()
	-Processing(const Processing &)
	-Processing &operator=(const Processing &)
	-const char *mName
	-list<Processing *> mChildList
	-mutex mChildListMtx
	-thread *mpThread
	-Success mSuccess
	-uint16_t mNumChildren
	-uint8_t mStateAbstract
	-DriverMode mDriver
	-uint8_t mStatParent
	-uint8_t mStatDrv
	-uint8_t mLevelTree
	-uint8_t mLevelDriver
	-{static} void parentalDrive(Processing *pChild)
	-{static} void internalDrive(Processing *pChild)
	-{static} size_t sleepInternalDriveUs
	-{static} size_t numBurstInternalDrive
	-{static} InternalDriverFunc pFctInternalDrive
	-{static} uint8_t showAddressInId
	-{static} uint8_t disableTreeDefault
	-{static} list<GlobDestructorFunc> globalDestructors
}

class Verb_ing < Present Participle > {
	+{static} Verb_ing *create()
	- -
	#Verb_ing()
	#{abstract} ~Verb_ing()
	- -
	-Verb_ing(const Verb_ing &) : Processing("")
	-Verb_ing &operator=(const Verb_ing &)
	-Success initialize()
	-Success process()
	-Success shutdown()
	-void processInfo(char *pBuf, char *pBufEnd)
}

Processing "1" o-u- "0..*" Processing
Processing <|- - Verb_ing

footer **Processing()** Class Diagram - Detailed \n(C) DSP-Crowd Electronics GmbH

@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>